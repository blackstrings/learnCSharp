//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1026
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.Serialization.Formatters.Binary;
using System.IO;
using Newtonsoft.Json;

namespace Serializing
{
	public class SerializeDemo
	{
//		public static void Main(){ start(); }
		
		private static string file = @"C:\Users\xlao\git\LearnCSharp\LearnCSharp\IO\Serializing\saveFile.so";
		
		private static void start(){
			//serialize the obj
			MySaveObject obj = new MySaveObject();
			obj.jsonString = "{'name':'tom'}";
			serializeObject(obj);
			
			//deserialize and read back the obj that has the saved data
			MySaveObject objNew = deserializeObject();
			Console.WriteLine(objNew.jsonString);
			
			//another step if want
			//read the saved data and convert the saved jsonString from obj into entity
			Entity obj2 = JsonConvert.DeserializeObject<Entity>(obj.jsonString);
			Console.WriteLine(obj2.name);
			
		}
		
		private static void serializeObject(MySaveObject obj){
			Stream stream = File.Open(file, FileMode.Create);
			BinaryFormatter bformatter = new BinaryFormatter();
			
			//write obj to file
			bformatter.Serialize(stream, obj);
			stream.Close();
		}
		
		private static MySaveObject deserializeObject(){
			MySaveObject obj = null;
			Stream stream = File.Open(file, FileMode.Open);
			BinaryFormatter bf = new BinaryFormatter();
			
			//convert to obj
			obj = (MySaveObject) bf.Deserialize(stream);
			stream.Close();
			
			return obj;
		}
	}
}

