//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1026
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Text;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace TBase
{
	public class LooDemo
	{
//		public static void Main(){ start(); }
		
		public static void start()
		{
			//init
			PState state = PState.Instance;
			Box box = (Box)new BoxFactory().getObject();
			
			//pretend event is triggered, get 10 random numbers
			Random rand = new Random();
			for(int i=0; i<10; i++){
				box.openNum(rand.Next(1,50));
			}
			
			//event triggered again
			box.openItem();
			
			//pass by reference test
			List<int> test = state.inventory;
			test.Add(99);
			
			foreach(int val in test){
				Console.Write(val + ", ");
			}
			
			Console.WriteLine();
			//test state inventory directly
			foreach(int val in state.inventory){
				Console.Write(val + ", ");
			}
			Console.WriteLine();
			
			
			//ex5
			
			
			state = PState.Instance;	///prove that we are still getting just the same instance
			string serialized = JsonConvert.SerializeObject(state);
			Console.WriteLine(serialized);
			
			//save state to file
			//SaveLoadState.save(serialized);	//by txt
			//SaveLoadState.saveSerialized();	//by serialization binary
			
		}
	}
}

